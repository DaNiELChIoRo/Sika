apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"
    flavorDimensions "default"
    defaultConfig {
        applicationId "com.muuyal.sika"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 17
        versionName "1.0.16"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    File signFile = rootProject.file('keys/keystore.properties')
    Properties properties = new Properties()
    properties.load(new FileInputStream(signFile))
    signingConfigs {
        release {
            storeFile rootProject.file(properties['keystore'])
            storePassword properties['storePassword']
            keyAlias properties['keyAlias']
            keyPassword properties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
        }

        debug {
            applicationIdSuffix ""
            signingConfig signingConfigs.release
            debuggable true
        }
    }

    productFlavors { variant ->
        prod {
            applicationId 'com.muuyal.sika'
        }
        beta {
            applicationId 'com.muuyal.sika.beta'
            versionName 'Beta ' + android.defaultConfig.versionName
        }
    }

    applicationVariants.all { variant ->
        def versionApkName = variant.versionName.replace(".", "_");

        variant.outputs.all {
            outputFileName = "Sika_" + getDate() + "_" + variant.name.toLowerCase() + "_" + versionApkName + ".apk";
        }

        variant.resValue "string", "versionName", variant.versionName
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.squareup.okhttp3:okhttp:3.7.0'
    compile 'com.squareup.picasso:picasso:2.5.2'

    compile 'com.afollestad.material-dialogs:core:0.9.4.2'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.appolica:interactive-info-window:v1.0.6'
    compile 'com.makeramen:roundedimageview:2.2.1'

    compile 'com.google.android.gms:play-services-location:11.8.0'
    compile 'com.google.android.gms:play-services-maps:11.8.0'
    compile 'com.google.android.gms:play-services-analytics:11.8.0'

    compile 'com.google.firebase:firebase-core:11.8.0'

    compile 'com.android.support:appcompat-v7:26.1.0'
    compile 'com.android.support:support-v13:26.1.0'
    compile 'com.android.support:design:26.1.0'
    compile 'com.android.support:cardview-v7:26.1.0'
    compile 'com.android.support:recyclerview-v7:26.1.0'


    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    testCompile 'junit:junit:4.12'
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate

}

apply plugin: 'com.google.gms.google-services'